// tsup.config.ts
import { access, readFile, writeFile } from "node:fs/promises";
import path from "node:path";
import { defineConfig } from "tsup";
var __injected_dirname__ =
  "/home/nahuelrosas/Public/Github/robust-ui/packages/robust-components/react-components";
async function removeDirective(fileName) {
  const filePath = path.resolve(__injected_dirname__, "dist", fileName);
  try {
    await access(filePath);
    let fileContents = await readFile(filePath, "utf-8");
    fileContents = fileContents.replace(/'use client'\n/g, "");
    await writeFile(filePath, fileContents);
  } catch (error) {
    if (error instanceof Error) {
      console.error(`Error while processing ${fileName}: ${error.message}`);
    } else {
      console.error(`Unknown error while processing ${fileName}`);
    }
  }
}
var tsup_config_default = defineConfig({
  format: ["cjs", "esm"],
  target: "es2022",
  sourcemap: true,
  minify: "terser",
  external: ["react"],
  terserOptions: {
    compress: true,
  },
  async onSuccess() {
    try {
      await Promise.all([
        removeDirective("index.mjs"),
        removeDirective("index.js"),
      ]);
    } catch (error) {
      console.error("Error during onSuccess:", error);
    }
  },
});
export { tsup_config_default as default };
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidHN1cC5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9faW5qZWN0ZWRfZmlsZW5hbWVfXyA9IFwiL2hvbWUvbmFodWVscm9zYXMvUHVibGljL0dpdGh1Yi9yb2J1c3QtdWkvcGFja2FnZXMvcm9idXN0LWNvbXBvbmVudHMvcmVhY3QtY29tcG9uZW50cy90c3VwLmNvbmZpZy50c1wiO2NvbnN0IF9faW5qZWN0ZWRfZGlybmFtZV9fID0gXCIvaG9tZS9uYWh1ZWxyb3Nhcy9QdWJsaWMvR2l0aHViL3JvYnVzdC11aS9wYWNrYWdlcy9yb2J1c3QtY29tcG9uZW50cy9yZWFjdC1jb21wb25lbnRzXCI7Y29uc3QgX19pbmplY3RlZF9pbXBvcnRfbWV0YV91cmxfXyA9IFwiZmlsZTovLy9ob21lL25haHVlbHJvc2FzL1B1YmxpYy9HaXRodWIvcm9idXN0LXVpL3BhY2thZ2VzL3JvYnVzdC1jb21wb25lbnRzL3JlYWN0LWNvbXBvbmVudHMvdHN1cC5jb25maWcudHNcIjtpbXBvcnQgeyBhY2Nlc3MsIHJlYWRGaWxlLCB3cml0ZUZpbGUgfSBmcm9tIFwibm9kZTpmcy9wcm9taXNlc1wiO1xuaW1wb3J0IHBhdGggZnJvbSBcIm5vZGU6cGF0aFwiO1xuaW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInRzdXBcIjtcblxuYXN5bmMgZnVuY3Rpb24gcmVtb3ZlRGlyZWN0aXZlKGZpbGVOYW1lOiBzdHJpbmcpIHtcbiAgY29uc3QgZmlsZVBhdGggPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCBcImRpc3RcIiwgZmlsZU5hbWUpO1xuXG4gIHRyeSB7XG4gICAgYXdhaXQgYWNjZXNzKGZpbGVQYXRoKTtcbiAgICBsZXQgZmlsZUNvbnRlbnRzID0gYXdhaXQgcmVhZEZpbGUoZmlsZVBhdGgsIFwidXRmLThcIik7XG5cbiAgICBmaWxlQ29udGVudHMgPSBmaWxlQ29udGVudHMucmVwbGFjZSgvJ3VzZSBjbGllbnQnXFxuL2csIFwiXCIpO1xuXG4gICAgYXdhaXQgd3JpdGVGaWxlKGZpbGVQYXRoLCBmaWxlQ29udGVudHMpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBFcnJvciB3aGlsZSBwcm9jZXNzaW5nICR7ZmlsZU5hbWV9OiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYFVua25vd24gZXJyb3Igd2hpbGUgcHJvY2Vzc2luZyAke2ZpbGVOYW1lfWApO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xuICBmb3JtYXQ6IFtcImNqc1wiLCBcImVzbVwiXSxcbiAgdGFyZ2V0OiBcImVzMjAyMlwiLFxuICBzb3VyY2VtYXA6IHRydWUsXG4gIG1pbmlmeTogXCJ0ZXJzZXJcIixcbiAgZXh0ZXJuYWw6IFtcInJlYWN0XCJdLFxuICB0ZXJzZXJPcHRpb25zOiB7XG4gICAgY29tcHJlc3M6IHRydWUsXG4gIH0sXG5cbiAgYXN5bmMgb25TdWNjZXNzKCkge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgIHJlbW92ZURpcmVjdGl2ZShcImluZGV4Lm1qc1wiKSxcbiAgICAgICAgcmVtb3ZlRGlyZWN0aXZlKFwiaW5kZXguanNcIiksXG4gICAgICBdKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGR1cmluZyBvblN1Y2Nlc3M6XCIsIGVycm9yKTtcbiAgICB9XG4gIH0sXG59KTtcbiJdLAogICJtYXBwaW5ncyI6ICI7QUFBNlksU0FBUyxRQUFRLFVBQVUsaUJBQWlCO0FBQ3piLE9BQU8sVUFBVTtBQUNqQixTQUFTLG9CQUFvQjtBQUZ3RyxJQUFNLHVCQUF1QjtBQUlsSyxlQUFlLGdCQUFnQixVQUFrQjtBQUMvQyxRQUFNLFdBQVcsS0FBSyxRQUFRLHNCQUFXLFFBQVEsUUFBUTtBQUV6RCxNQUFJO0FBQ0YsVUFBTSxPQUFPLFFBQVE7QUFDckIsUUFBSSxlQUFlLE1BQU0sU0FBUyxVQUFVLE9BQU87QUFFbkQsbUJBQWUsYUFBYSxRQUFRLG1CQUFtQixFQUFFO0FBRXpELFVBQU0sVUFBVSxVQUFVLFlBQVk7QUFBQSxFQUN4QyxTQUFTLE9BQU87QUFDZCxRQUFJLGlCQUFpQixPQUFPO0FBQzFCLGNBQVEsTUFBTSwwQkFBMEIsUUFBUSxLQUFLLE1BQU0sT0FBTyxFQUFFO0FBQUEsSUFDdEUsT0FBTztBQUNMLGNBQVEsTUFBTSxrQ0FBa0MsUUFBUSxFQUFFO0FBQUEsSUFDNUQ7QUFBQSxFQUNGO0FBQ0Y7QUFFQSxJQUFPLHNCQUFRLGFBQWE7QUFBQSxFQUMxQixRQUFRLENBQUMsT0FBTyxLQUFLO0FBQUEsRUFDckIsUUFBUTtBQUFBLEVBQ1IsV0FBVztBQUFBLEVBQ1gsUUFBUTtBQUFBLEVBQ1IsVUFBVSxDQUFDLE9BQU87QUFBQSxFQUNsQixlQUFlO0FBQUEsSUFDYixVQUFVO0FBQUEsRUFDWjtBQUFBLEVBRUEsTUFBTSxZQUFZO0FBQ2hCLFFBQUk7QUFDRixZQUFNLFFBQVEsSUFBSTtBQUFBLFFBQ2hCLGdCQUFnQixXQUFXO0FBQUEsUUFDM0IsZ0JBQWdCLFVBQVU7QUFBQSxNQUM1QixDQUFDO0FBQUEsSUFDSCxTQUFTLE9BQU87QUFDZCxjQUFRLE1BQU0sMkJBQTJCLEtBQUs7QUFBQSxJQUNoRDtBQUFBLEVBQ0Y7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
